{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WS\\\\reactws\\\\ReactNativeEcommerce\\\\src\\\\views\\\\OrderInfo.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Map } from 'immutable';\nimport { connect } from 'react-redux';\nimport { trackSelectedOrder, getSelectedOrderAddress, getCartById, updateOrder } from \"../redux/action/trackOrderAction\";\nimport Basket from \"./Basket\";\nimport calcPrice from \"../components/calcPrice\";\nimport Confirmation from \"../components/confirmation\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nvar arr = [{\n  key: -1,\n  value: 'New'\n}, {\n  key: 0,\n  value: 'Confirmed Order'\n}, {\n  key: 1,\n  value: 'Processing Order'\n}, {\n  key: 2,\n  value: 'Quality Check'\n}, {\n  key: 3,\n  value: 'Product Dispatched'\n}, {\n  key: 4,\n  value: 'Product Delivered'\n}];\n\nfunction OrderInfo(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      order = _useState2[0],\n      setOrder = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cart = _useState4[0],\n      setCart = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      address = _useState6[0],\n      setAddress = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      comment = _useState8[0],\n      setComment = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      confirmationFlg = _useState10[0],\n      setConfirmationFlg = _useState10[1];\n\n  console.log(props.route.params.id);\n  useEffect(function () {\n    props.trackSelectedOrder(props.route.params.id);\n  }, []);\n  useEffect(function () {\n    if (!props.track_order_loading) {\n      if (!props.track_order.toJS().error) {\n        Object.keys(props.track_order.toJS().data[0]).map(function (key) {\n          setOrder(function (prevState) {\n            prevState[key] = props.track_order.toJS().data[0][key];\n            return _objectSpread({}, prevState);\n          });\n        });\n        props.getCartById(props.track_order.toJS().data[0].cartId);\n        props.getSelectedOrderAddress(props.track_order.toJS().data[0].addressId);\n      }\n    }\n  }, [props.track_order_loading]);\n  useEffect(function () {\n    if (!props.cart_loading) {\n      if (!props.cart.toJS().error) {\n        Object.keys(props.cart.toJS().data).map(function (key) {\n          setCart(function (prevState) {\n            prevState[key] = props.cart.toJS().data[key];\n            return _objectSpread({}, prevState);\n          });\n        });\n      }\n    }\n  }, [props.cart_loading]);\n  useEffect(function () {\n    if (!props.address_by_id_loading) {\n      if (!props.address_by_id.toJS().error) {\n        Object.keys(props.address_by_id.toJS().data[0]).map(function (key) {\n          setAddress(function (prevState) {\n            prevState[key] = props.address_by_id.toJS().data[0][key];\n            return _objectSpread({}, prevState);\n          });\n        });\n      }\n    }\n  }, [props.address_by_id_loading]);\n  useEffect(function () {\n    if (!props.update_order_loading) {\n      if (!props.update_order.toJS().error) {\n        alert(\"Order updated successfully.\");\n        setComment('');\n      } else {\n        alert(\"Error while updating order.\");\n      }\n    }\n  }, [props.update_order_loading]);\n\n  var onChangeHandler = function onChangeHandler(e) {\n    var id = e.target.id,\n        value = e.target.value;\n\n    if (value) {\n      setOrder(function (prevState) {\n        prevState[id] = value;\n        return _objectSpread({}, prevState);\n      });\n    }\n  };\n\n  function updateOrderStatus() {\n    if (order) {\n      props.updateOrder(order);\n    }\n  }\n\n  function cancelOrder() {\n    setConfirmationFlg(true);\n  }\n\n  function postComment() {\n    if (order && comment) {\n      setOrder(function (prevState) {\n        var commentsArr = prevState.comments;\n        prevState.comments = commentsArr.push(comment);\n        return _objectSpread({}, prevState);\n      });\n      props.updateOrder(order);\n    }\n  }\n\n  function confirmationHandler() {\n    if (order) {\n      setOrder(function (prevState) {\n        prevState.orderLevel = 5;\n        return _objectSpread({}, prevState);\n      });\n      props.updateOrder(order);\n    }\n  }\n\n  function closeHandler() {\n    setConfirmationFlg(false);\n  }\n\n  console.log(props.user);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, confirmationFlg && React.createElement(Confirmation, {\n    showModal: confirmationFlg,\n    handleClose: function handleClose(e) {\n      return closeHandler();\n    },\n    handleConfirmationMessage: function handleConfirmationMessage(e) {\n      return confirmationHandler(e);\n    },\n    title: 'Confirmation',\n    childern: 'Are you sure you want to cancel the order',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"User Information\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Name:\", props.user && props.user.user_name), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Email :\", props.user && props.user.email), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"Order Details\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Priority:\", order && order.priority), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Total Amount :\", order && order.totalAmount), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"Payment Method :\", order && order.paymentMethod), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"Payment Status :\", order && order.paymentStatus), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"Order Process :\", order && arr.filter(function (item) {\n    return item.key === order.orderLevel;\n  }).map(function (item) {\n    return item.value;\n  })[0]), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Address Information\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Address 1: \", address && address.address1), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Address 2 :\", address && address.address2), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"City :\", address && address.city, \" Pincode:\", address && address.pincode, \" \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"State :\", address && address.state), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Land Mark :\", address && address.landMark), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Phone No :\", address && address.phoneNo), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Address Type :\", address && address.addressType), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, \"Total Quatity :\", cart && cart.totalQty), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"Sub Total:Rs. \", cart && cart.totalPrice), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"Delivery Charges :\", 'Free'), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"Estimated tax :Rs. \", calcPrice(cart.totalPrice).taxes), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Total :Rs. \", calcPrice(cart.totalPrice).total), React.createElement(TextInput, {\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(e) {\n      return setComment(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    fullWidth: true,\n    onPress: function onPress() {\n      return postComment();\n    },\n    backgroundColor: \"#F08C4F\",\n    text: \"Post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    fullWidth: true,\n    onPress: function onPress() {\n      return cancelOrder();\n    },\n    backgroundColor: \"#F08C4F\",\n    text: \"Cancel Order\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }), React.createElement(Basket, {\n    cart: cart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    track_order_loading: state.TrackOrdersReducer.getIn(['track_order', 'loading'], true),\n    track_order: state.TrackOrdersReducer.getIn(['track_order'], Map),\n    address_by_id_loading: state.TrackOrdersReducer.getIn(['address_by_id', 'loading'], true),\n    address_by_id: state.TrackOrdersReducer.getIn(['address_by_id'], Map),\n    cart_loading: state.TrackOrdersReducer.getIn(['cart_by_id', 'loading'], true),\n    cart: state.TrackOrdersReducer.getIn(['cart_by_id'], Map),\n    update_order_loading: state.TrackOrdersReducer.getIn(['update_order', 'loading'], true),\n    update_order: state.TrackOrdersReducer.getIn(['update_order'], Map),\n    user: state.token.user_token\n  };\n};\n\nexport default connect(mapStateToProps, {\n  trackSelectedOrder: trackSelectedOrder,\n  getSelectedOrderAddress: getSelectedOrderAddress,\n  getCartById: getCartById,\n  updateOrder: updateOrder\n})(OrderInfo);","map":{"version":3,"sources":["D:/WS/reactws/ReactNativeEcommerce/src/views/OrderInfo.js"],"names":["React","useState","useEffect","Map","connect","trackSelectedOrder","getSelectedOrderAddress","getCartById","updateOrder","Basket","calcPrice","Confirmation","arr","key","value","OrderInfo","props","order","setOrder","cart","setCart","address","setAddress","comment","setComment","confirmationFlg","setConfirmationFlg","console","log","route","params","id","track_order_loading","track_order","toJS","error","Object","keys","data","map","prevState","cartId","addressId","cart_loading","address_by_id_loading","address_by_id","update_order_loading","update_order","alert","onChangeHandler","e","target","updateOrderStatus","cancelOrder","postComment","commentsArr","comments","push","confirmationHandler","orderLevel","closeHandler","user","user_name","email","priority","totalAmount","paymentMethod","paymentStatus","filter","item","address1","address2","city","pincode","state","landMark","phoneNo","addressType","totalQty","totalPrice","taxes","total","mapStateToProps","TrackOrdersReducer","getIn","token","user_token"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Map } from 'immutable'\r\nimport { connect } from 'react-redux'\r\nimport { trackSelectedOrder, getSelectedOrderAddress, getCartById, updateOrder } from '../redux/action/trackOrderAction'\r\nimport Basket from './Basket'\r\nimport calcPrice from '../components/calcPrice'\r\nimport Confirmation from '../components/confirmation'\r\nimport { View, StyleSheet, Button, Alert, TextInput, Text } from \"react-native\";\r\n\r\nlet arr = [{ key: -1, value: 'New' },\r\n{ key: 0, value: 'Confirmed Order' },\r\n{ key: 1, value: 'Processing Order' },\r\n{ key: 2, value: 'Quality Check' },\r\n{ key: 3, value: 'Product Dispatched' },\r\n{ key: 4, value: 'Product Delivered' }\r\n]\r\nfunction OrderInfo(props) {\r\n    const [order, setOrder] = useState({})\r\n    const [cart, setCart] = useState({})\r\n    const [address, setAddress] = useState({})\r\n    const [comment, setComment] = useState('')\r\n    const [confirmationFlg, setConfirmationFlg] = useState(false)\r\n    console.log(props.route.params.id)\r\n    useEffect(() => {\r\n        props.trackSelectedOrder(props.route.params.id)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!props.track_order_loading) {\r\n            if (!props.track_order.toJS().error) {\r\n                Object.keys(props.track_order.toJS().data[0]).map(key => {\r\n                    setOrder(prevState => {\r\n                        prevState[key] = props.track_order.toJS().data[0][key]\r\n                        return ({ ...prevState })\r\n                    })\r\n                })\r\n                props.getCartById(props.track_order.toJS().data[0].cartId)\r\n                props.getSelectedOrderAddress(props.track_order.toJS().data[0].addressId)\r\n            }\r\n        }\r\n    }, [props.track_order_loading])\r\n\r\n    useEffect(() => {\r\n        if (!props.cart_loading) {\r\n            if (!props.cart.toJS().error) {\r\n                Object.keys(props.cart.toJS().data).map(key => {\r\n                    setCart(prevState => {\r\n                        prevState[key] = props.cart.toJS().data[key]\r\n                        return ({ ...prevState })\r\n                    })\r\n                })\r\n            }\r\n        }\r\n    }, [props.cart_loading])\r\n\r\n    useEffect(() => {\r\n        if (!props.address_by_id_loading) {\r\n            if (!props.address_by_id.toJS().error) {\r\n                Object.keys(props.address_by_id.toJS().data[0]).map(key => {\r\n                    setAddress(prevState => {\r\n                        prevState[key] = props.address_by_id.toJS().data[0][key]\r\n                        return ({ ...prevState })\r\n                    })\r\n                })\r\n            }\r\n        }\r\n    }, [props.address_by_id_loading])\r\n\r\n    useEffect(() => {\r\n        if (!props.update_order_loading) {\r\n            if (!props.update_order.toJS().error) {\r\n                alert(\"Order updated successfully.\")\r\n                setComment('')\r\n            } else {\r\n                alert(\"Error while updating order.\")\r\n            }\r\n        }\r\n    }, [props.update_order_loading])\r\n\r\n    const onChangeHandler = (e) => {\r\n        let id = e.target.id, value = e.target.value\r\n        if (value) {\r\n            setOrder(prevState => {\r\n                prevState[id] = value\r\n                return ({ ...prevState })\r\n            })\r\n        }\r\n    }\r\n    function updateOrderStatus() {\r\n        if (order) {\r\n            props.updateOrder(order)\r\n        }\r\n    }\r\n\r\n    function cancelOrder() {\r\n        setConfirmationFlg(true)\r\n\r\n    }\r\n\r\n    function postComment() {\r\n        if (order && comment) {\r\n            setOrder(prevState => {\r\n                let commentsArr = prevState.comments\r\n                prevState.comments = commentsArr.push(comment)\r\n                return ({ ...prevState })\r\n            })\r\n            props.updateOrder(order)\r\n        }\r\n    }\r\n\r\n    function confirmationHandler() {\r\n        if (order) {\r\n            setOrder(prevState => {\r\n                prevState.orderLevel = 5\r\n                return ({ ...prevState })\r\n            })\r\n            props.updateOrder(order)\r\n        }\r\n    }\r\n\r\n    function closeHandler() {\r\n        setConfirmationFlg(false)\r\n    }\r\n\r\n    console.log(props.user)\r\n    return (\r\n        <View>\r\n            {confirmationFlg && <Confirmation\r\n                showModal={confirmationFlg}\r\n                handleClose={(e) => closeHandler()}\r\n                handleConfirmationMessage={(e) => confirmationHandler(e)}\r\n                title={'Confirmation'}\r\n                childern={'Are you sure you want to cancel the order'}\r\n            />}\r\n\r\n            <Text>User Information</Text>\r\n            <Text>Name:{props.user && props.user.user_name}</Text>\r\n            <Text>Email :{props.user && props.user.email}</Text>\r\n            <Text>Order Details</Text>\r\n            <Text>Priority:{order && order.priority}</Text>\r\n            <Text>Total Amount :{order && order.totalAmount}</Text>\r\n            <Text>Payment Method :{order && order.paymentMethod}</Text>\r\n            <Text>Payment Status :{order && order.paymentStatus}</Text>\r\n            <Text>Order Process :{order && arr.filter(item => item.key === order.orderLevel).map(item => item.value)[0]}</Text>\r\n            <Text>Address Information</Text>\r\n            <Text>Address 1: {address && address.address1}</Text>\r\n            <Text>Address 2 :{address && address.address2}</Text>\r\n            <Text>City :{address && address.city} Pincode:{address && address.pincode} </Text>\r\n            <Text>State :{address && address.state}</Text>\r\n            <Text>Land Mark :{address && address.landMark}</Text>\r\n            <Text>Phone No :{address && address.phoneNo}</Text>\r\n            <Text>Address Type :{address && address.addressType}</Text>\r\n\r\n            <Text>Total Quatity :{cart && cart.totalQty}</Text>\r\n            <Text>Sub Total:Rs. {cart && cart.totalPrice}</Text>\r\n            <Text>Delivery Charges :{'Free'}</Text>\r\n            <Text>Estimated tax :Rs. {calcPrice(cart.totalPrice).taxes}</Text>\r\n            <Text>Total :Rs. {calcPrice(cart.totalPrice).total}</Text>\r\n            <TextInput \r\n                placeholder=\"Email\"\r\n                keyboardType=\"email-address\"\r\n                underlineColorAndroid='transparent'\r\n                onChangeText={(e) => setComment(e)} />\r\n\r\n\r\n            <Button fullWidth onPress={() => postComment()} backgroundColor=\"#F08C4F\" text=\"Post\" />\r\n            <Button fullWidth onPress={() => cancelOrder()} backgroundColor=\"#F08C4F\" text=\"Cancel Order\" />\r\n\r\n            <Basket cart={cart} />\r\n            \r\n        </View >\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        track_order_loading: state.TrackOrdersReducer.getIn(['track_order', 'loading'], true),\r\n        track_order: state.TrackOrdersReducer.getIn(['track_order'], Map),\r\n        address_by_id_loading: state.TrackOrdersReducer.getIn(['address_by_id', 'loading'], true),\r\n        address_by_id: state.TrackOrdersReducer.getIn(['address_by_id'], Map),\r\n        cart_loading: state.TrackOrdersReducer.getIn(['cart_by_id', 'loading'], true),\r\n        cart: state.TrackOrdersReducer.getIn(['cart_by_id'], Map),\r\n        update_order_loading: state.TrackOrdersReducer.getIn(['update_order', 'loading'], true),\r\n        update_order: state.TrackOrdersReducer.getIn(['update_order'], Map),\r\n        user: state.token.user_token\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { trackSelectedOrder, getSelectedOrderAddress, getCartById, updateOrder })(OrderInfo)"]},"metadata":{},"sourceType":"module"}