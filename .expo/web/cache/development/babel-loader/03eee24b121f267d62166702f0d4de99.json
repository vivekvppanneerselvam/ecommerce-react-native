{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport AsyncStorage from '@react-native-community/async-storage';\n\nvar Auth = function () {\n  function Auth() {\n    _classCallCheck(this, Auth);\n  }\n\n  _createClass(Auth, [{\n    key: \"getAuth\",\n    value: function getAuth() {\n      var authJson;\n      return _regeneratorRuntime.async(function getAuth$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('auth'));\n\n            case 3:\n              authJson = _context.sent;\n              return _context.abrupt(\"return\", authJson != null ? JSON.parse(authJson) : null);\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      return _regeneratorRuntime.async(function getToken$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.getAuth().token);\n\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getUserId\",\n    value: function getUserId() {\n      return _regeneratorRuntime.async(function getUserId$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              console.log(\"this.getAuth().user_id\", this.getAuth());\n              return _context4.abrupt(\"return\", this.getAuth().then(function _callee(item) {\n                return _regeneratorRuntime.async(function _callee$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        console.log(item);\n\n                        if (!item) {\n                          _context3.next = 5;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\", item.user_id);\n\n                      case 5:\n                        _context3.next = 7;\n                        return _regeneratorRuntime.awrap(AsyncStorage.removeItem('auth'));\n\n                      case 7:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"setUserToken\",\n    value: function setUserToken(new_token) {\n      var tokenJson;\n      return _regeneratorRuntime.async(function setUserToken$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              tokenJson = JSON.stringify(new_token);\n              _context5.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userToken'));\n\n            case 4:\n              _context5.next = 9;\n              break;\n\n            case 6:\n              _context5.prev = 6;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      return _regeneratorRuntime.async(function logout$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem('auth'));\n\n            case 3:\n              _context6.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userToken'));\n\n            case 5:\n              _context6.next = 10;\n              break;\n\n            case 7:\n              _context6.prev = 7;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    }\n  }]);\n\n  return Auth;\n}();\n\nexport default new Auth();","map":{"version":3,"sources":["D:/WS/reactws/ReactNativeEcommerce/src/modules/Auth/index.js"],"names":["AsyncStorage","Auth","getItem","authJson","JSON","parse","getAuth","token","console","log","then","item","user_id","removeItem","new_token","tokenJson","stringify"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;IAEMC,I;AACJ,kBAAc;AAAA;AAEb;;;;;;;;;;;;+CAG0BD,YAAY,CAACE,OAAb,CAAqB,MAArB,C;;;AAAjBC,cAAAA,Q;+CAECA,QAAQ,IAAI,IAAZ,GAAmBC,IAAI,CAACC,KAAL,CAAWF,QAAX,CAAnB,GAA0C,I;;;;;;;;;;;;;;;;;;;;;;+CAOtC,KAAKG,OAAL,GAAeC,K;;;;;;;;;;;;;;;;;;;AAI5BC,cAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC,KAAKH,OAAL,EAAtC;gDACO,KAAKA,OAAL,GAAeI,IAAf,CAAoB,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AACzBH,wBAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;;AADyB,6BAErBA,IAFqB;AAAA;AAAA;AAAA;;AAAA,0DAGhBA,IAAI,CAACC,OAHW;;AAAA;AAAA;AAAA,yDAKjBZ,YAAY,CAACa,UAAb,CAAwB,MAAxB,CALiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAApB,C;;;;;;;;;;;iCAYUC,S;;;;;;;AAETC,cAAAA,S,GAAYX,IAAI,CAACY,SAAL,CAAeF,SAAf,C;;+CACZd,YAAY,CAACa,UAAb,CAAwB,WAAxB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;+CASAb,YAAY,CAACa,UAAb,CAAwB,MAAxB,C;;;;+CACAb,YAAY,CAACa,UAAb,CAAwB,WAAxB,C;;;;;;;;;;;;;;;;;;;;;;;AAOZ,eAAe,IAAIZ,IAAJ,EAAf","sourcesContent":["import AsyncStorage from '@react-native-community/async-storage';\r\n\r\nclass Auth {\r\n  constructor() {\r\n    // this.user_token = JSON.parse(localStorage.getItem('auth'))||{}\r\n  }\r\n  async getAuth() {\r\n    try {\r\n      const authJson = await AsyncStorage.getItem('auth')\r\n      //console.log(authJson, JSON.parse(authJson))\r\n      return authJson != null ? JSON.parse(authJson) : null\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  async getToken() {\r\n    return await this.getAuth().token;\r\n    // return this.user_token.token\r\n  }\r\n  async getUserId() {\r\n    console.log(\"this.getAuth().user_id\", this.getAuth())\r\n    return this.getAuth().then(async (item) => {\r\n      console.log(item)\r\n      if (item) {\r\n        return item.user_id\r\n      }else{  \r\n        await AsyncStorage.removeItem('auth')\r\n\r\n      }\r\n\r\n    });\r\n    // return this.user_token.user_id\r\n  }\r\n  async setUserToken(new_token) {\r\n    try {\r\n      const tokenJson = JSON.stringify(new_token)\r\n      await AsyncStorage.removeItem('userToken');\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n    // this.user_token = new_token\r\n    // localStorage.setItem('auth', JSON.stringify(new_token))\r\n  }\r\n  async logout() {\r\n    try {\r\n      await AsyncStorage.removeItem('auth')\r\n      await AsyncStorage.removeItem('userToken');\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n    // localStorage.removeItem('auth')\r\n  }\r\n}\r\nexport default new Auth()"]},"metadata":{},"sourceType":"module"}