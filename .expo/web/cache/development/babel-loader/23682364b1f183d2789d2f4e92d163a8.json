{"ast":null,"code":"import serverCall from \"../../modules/serverCall\";\nimport Auth from \"../../modules/Auth\";\nexport var getCartByUserId = function getCartByUserId() {\n  return function (dispatch) {\n    var userId = Auth.getUserId();\n    dispatch({\n      type: GET_CART_BY_USERID_BEGIN\n    });\n    return serverCall({\n      method: 'GET',\n      url: \"users/\" + userId + \"/cart\"\n    }).then(function (res) {\n      dispatch({\n        type: GET_CART_BY_USERID_SUCCESS,\n        payload: res\n      });\n      return res;\n    }).catch(function (error) {\n      dispatch({\n        type: GET_CART_BY_USERID_FAIL,\n        payload: {\n          error: error\n        }\n      });\n      return error;\n    });\n  };\n};\nexport var postCart = function postCart(productId, increase, decrease) {\n  return function (dispatch) {\n    var userId = Auth.getUserId();\n    dispatch({\n      type: POST_CART_BEGIN\n    });\n    return serverCall({\n      method: 'POST',\n      url: \"users/\" + userId + \"/cart\",\n      data: {\n        userId: userId,\n        productId: productId,\n        increase: increase,\n        decrease: decrease\n      }\n    }).then(function (res) {\n      dispatch({\n        type: POST_CART_SUCCESS,\n        payload: res\n      });\n      return res;\n    }).catch(function (error) {\n      dispatch({\n        type: POST_CART_FAIL,\n        payload: {\n          error: error\n        }\n      });\n      return error;\n    });\n  };\n};\nexport var POST_CART_BEGIN = 'POST_CART_BEGIN';\nexport var POST_CART_SUCCESS = 'POST_CART_SUCCESS';\nexport var POST_CART_FAIL = 'POST_CART_FAIL';\nexport var GET_CART_BY_USERID_BEGIN = 'GET_CART_BY_USERID_BEGIN';\nexport var GET_CART_BY_USERID_SUCCESS = 'GET_CART_BY_USERID_SUCCESS';\nexport var GET_CART_BY_USERID_FAIL = 'GET_CART_BY_USERID_FAIL';","map":{"version":3,"sources":["D:/WS/reactws/ReactNativeEcommerce/src/redux/action/cartAction.js"],"names":["serverCall","Auth","getCartByUserId","dispatch","userId","getUserId","type","GET_CART_BY_USERID_BEGIN","method","url","then","res","GET_CART_BY_USERID_SUCCESS","payload","catch","error","GET_CART_BY_USERID_FAIL","postCart","productId","increase","decrease","POST_CART_BEGIN","data","POST_CART_SUCCESS","POST_CART_FAIL"],"mappings":"AAAA,OAAOA,UAAP;AACA,OAAOC,IAAP;AAGA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAM,UAAAC,QAAQ,EAAI;AAC/C,QAAIC,MAAM,GAAGH,IAAI,CAACI,SAAL,EAAb;AACAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEC;AADC,KAAD,CAAR;AAGA,WAAOP,UAAU,CAAC;AAChBQ,MAAAA,MAAM,EAAE,KADQ;AAEhBC,MAAAA,GAAG,aAAWL,MAAX;AAFa,KAAD,CAAV,CAIJM,IAJI,CAIC,UAAAC,GAAG,EAAI;AACXR,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEM,0BADC;AAEPC,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAIA,aAAOA,GAAP;AACD,KAVI,EAWJG,KAXI,CAWE,UAAAC,KAAK,EAAI;AACdZ,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEU,uBADC;AAEPH,QAAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAALA;AAAF;AAFF,OAAD,CAAR;AAIA,aAAOA,KAAP;AACD,KAjBI,CAAP;AAkBD,GAvB8B;AAAA,CAAxB;AAyBP,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,QAAtB;AAAA,SAAmC,UAACjB,QAAD,EAAc;AACvE,QAAIC,MAAM,GAAGH,IAAI,CAACI,SAAL,EAAb;AACAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEe;AADC,KAAD,CAAR;AAGA,WAAOrB,UAAU,CAAC;AAChBQ,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,GAAG,aAAWL,MAAX,UAFa;AAGhBkB,MAAAA,IAAI,EAAE;AACJlB,QAAAA,MAAM,EAANA,MADI;AAEJc,QAAAA,SAAS,EAATA,SAFI;AAGJC,QAAAA,QAAQ,EAARA,QAHI;AAIJC,QAAAA,QAAQ,EAARA;AAJI;AAHU,KAAD,CAAV,CAUJV,IAVI,CAUC,UAAAC,GAAG,EAAI;AACXR,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEiB,iBADC;AAEPV,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAIA,aAAOA,GAAP;AACD,KAhBI,EAiBJG,KAjBI,CAiBE,UAAAC,KAAK,EAAI;AACdZ,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEkB,cADC;AAEPX,QAAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAALA;AAAF;AAFF,OAAD,CAAR;AAIA,aAAOA,KAAP;AACD,KAvBI,CAAP;AAwBD,GA7BuB;AAAA,CAAjB;AA+BP,OAAO,IAAMM,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAME,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMjB,wBAAwB,GAAG,0BAAjC;AACP,OAAO,IAAMK,0BAA0B,GAAG,4BAAnC;AACP,OAAO,IAAMI,uBAAuB,GAAG,yBAAhC","sourcesContent":["import serverCall from '../../modules/serverCall'\r\nimport Auth from '../../modules/Auth';\r\n\r\n\r\nexport const getCartByUserId = () => dispatch => {\r\n  let userId = Auth.getUserId()\r\n  dispatch({\r\n    type: GET_CART_BY_USERID_BEGIN\r\n  })\r\n  return serverCall({\r\n    method: 'GET',\r\n    url: `users/${userId}/cart`\r\n  })\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_CART_BY_USERID_SUCCESS,\r\n        payload: res\r\n      })\r\n      return res\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: GET_CART_BY_USERID_FAIL,\r\n        payload: { error }\r\n      })\r\n      return error\r\n    })\r\n}\r\n\r\nexport const postCart = (productId, increase, decrease) => (dispatch) => {\r\n  let userId = Auth.getUserId()\r\n  dispatch({\r\n    type: POST_CART_BEGIN\r\n  })\r\n  return serverCall({\r\n    method: 'POST',\r\n    url: `users/${userId}/cart`,\r\n    data: {\r\n      userId,\r\n      productId,\r\n      increase,\r\n      decrease\r\n    }\r\n  })\r\n    .then(res => {\r\n      dispatch({\r\n        type: POST_CART_SUCCESS,\r\n        payload: res\r\n      })\r\n      return res\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: POST_CART_FAIL,\r\n        payload: { error }\r\n      })\r\n      return error\r\n    })\r\n}\r\n\r\nexport const POST_CART_BEGIN = 'POST_CART_BEGIN'\r\nexport const POST_CART_SUCCESS = 'POST_CART_SUCCESS'\r\nexport const POST_CART_FAIL = 'POST_CART_FAIL'\r\n\r\nexport const GET_CART_BY_USERID_BEGIN = 'GET_CART_BY_USERID_BEGIN'\r\nexport const GET_CART_BY_USERID_SUCCESS = 'GET_CART_BY_USERID_SUCCESS'\r\nexport const GET_CART_BY_USERID_FAIL = 'GET_CART_BY_USERID_FAIL'"]},"metadata":{},"sourceType":"module"}