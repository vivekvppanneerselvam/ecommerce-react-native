{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WS\\\\reactws\\\\ReactNativeEcommerce\\\\src\\\\views\\\\Track.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Map } from 'immutable';\nimport { connect } from 'react-redux';\nimport { trackSelectedOrder } from \"../redux/action/trackOrderAction\";\nimport TimeLine from \"../components/TimeLine\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\n\nfunction Track(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      order = _useState2[0],\n      setOrder = _useState2[1];\n\n  console.log(props.route.params.id);\n  useEffect(function () {\n    props.trackSelectedOrder(props.route.params.id);\n  }, []);\n  useEffect(function () {\n    if (!props.track_order_loading) {\n      if (!props.track_order.toJS().error) {\n        Object.keys(props.track_order.toJS().data[0]).map(function (key) {\n          setOrder(function (prevState) {\n            prevState[key] = props.track_order.toJS().data[0][key];\n            return _objectSpread({}, prevState);\n          });\n        });\n      }\n    }\n  }, [props.track_order_loading]);\n\n  function orderInfo() {\n    props.navigation.navigate('OrderInfo', {\n      id: props.route.params.id\n    });\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, props.route.params.id), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Shipped Via: Processing Order\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Ordered Date: \", order && order.createDate), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Expected Date: \", order && new Date(order.createDate).setDate(new Date(order.createDate).getDate() + 2)), React.createElement(TimeLine, {\n    timelineDirection: 'column',\n    timelineFormat: 'time-show-afterward',\n    compactness: 20,\n    timelineItemHeight: 50,\n    circleSize: 18,\n    circleColor: '#007AFF',\n    lineWidth: 1,\n    showSeparator: false,\n    innerCircle: 'dot',\n    icon: 'hand-stop-o',\n    iconColor: 'black',\n    datasource: [{\n      time: '1:44',\n      title: 'Confirmed Order'\n    }, {\n      time: '10:45',\n      title: 'Processing Order'\n    }, {\n      time: '12:00',\n      title: 'Quality Check'\n    }, {\n      time: '14:00',\n      title: 'Product Dispatched'\n    }, {\n      time: '16:30',\n      title: 'Product Delivered'\n    }],\n    renderChildren: function renderChildren(item) {\n      return React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 43\n        }\n      }, item.title);\n    },\n    onEventPress: function onEventPress(selectedItem) {\n      console.log(selectedItem);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    fullWidth: true,\n    onPress: function onPress() {\n      return orderInfo();\n    },\n    backgroundColor: \"#F08C4F\",\n    text: \"View Order Details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    track_order_loading: state.TrackOrdersReducer.getIn(['track_order', 'loading'], true),\n    track_order: state.TrackOrdersReducer.getIn(['track_order'], Map)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  trackSelectedOrder: trackSelectedOrder\n})(Track);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 20,\n    backgroundColor: \"#ebf0f7\"\n  }\n});","map":{"version":3,"sources":["D:/WS/reactws/ReactNativeEcommerce/src/views/Track.js"],"names":["React","useState","useEffect","Map","connect","trackSelectedOrder","TimeLine","Track","props","order","setOrder","console","log","route","params","id","track_order_loading","track_order","toJS","error","Object","keys","data","map","key","prevState","orderInfo","navigation","navigate","createDate","Date","setDate","getDate","time","title","item","selectedItem","mapStateToProps","state","TrackOrdersReducer","getIn","styles","StyleSheet","create","container","flex","marginTop","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Map } from 'immutable'\r\nimport { connect } from 'react-redux'\r\nimport { trackSelectedOrder } from '../redux/action/trackOrderAction'\r\nimport TimeLine from '../components/TimeLine'\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    Button,\r\n    Image,\r\n    TouchableOpacity,\r\n    FlatList,\r\n    Dimensions,\r\n    Alert,\r\n    ScrollView\r\n} from 'react-native';\r\n\r\nfunction Track(props) {\r\n    const [order, setOrder] = useState({})\r\n    console.log(props.route.params.id)\r\n    useEffect(() => {\r\n        props.trackSelectedOrder(props.route.params.id)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!props.track_order_loading) {\r\n            if (!props.track_order.toJS().error) {\r\n                Object.keys(props.track_order.toJS().data[0]).map(key => {\r\n                    setOrder(prevState => {\r\n                        prevState[key] = props.track_order.toJS().data[0][key]\r\n                        return ({ ...prevState })\r\n                    })\r\n                })\r\n            }\r\n        }\r\n    }, [props.track_order_loading])\r\n\r\n    function orderInfo(){\r\n        props.navigation.navigate('OrderInfo',{\r\n            id:props.route.params.id\r\n        })\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <Text>{props.route.params.id}</Text>\r\n            <Text>Shipped Via: Processing Order</Text>\r\n            <Text>Ordered Date: {order && order.createDate}</Text>\r\n            <Text>Expected Date: {order && new Date(order.createDate).setDate(new Date(order.createDate).getDate() + 2)}</Text>\r\n            <TimeLine\r\n                timelineDirection={'column'}\r\n                timelineFormat={'time-show-afterward'}\r\n                compactness={20}\r\n                timelineItemHeight={50}\r\n                circleSize={18}\r\n                circleColor={'#007AFF'}\r\n                lineWidth={1}\r\n                showSeparator={false}\r\n                innerCircle={'dot'}\r\n                icon={'hand-stop-o'}\r\n                iconColor={'black'}\r\n                datasource={[\r\n                    { time: '1:44', title: 'Confirmed Order' },\r\n                    { time: '10:45', title: 'Processing Order' },\r\n                    { time: '12:00', title: 'Quality Check' },\r\n                    { time: '14:00', title: 'Product Dispatched' },\r\n                    { time: '16:30', title: 'Product Delivered' }\r\n                ]}\r\n                renderChildren={(item) => <Text>{item.title}</Text>}\r\n                onEventPress={(selectedItem) => { console.log(selectedItem) }}\r\n            />\r\n            <Button fullWidth onPress={() => orderInfo()} backgroundColor=\"#F08C4F\" text=\"View Order Details\" />\r\n        </View >\r\n    )\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        track_order_loading: state.TrackOrdersReducer.getIn(['track_order', 'loading'], true),\r\n        track_order: state.TrackOrdersReducer.getIn(['track_order'], Map),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { trackSelectedOrder })(Track)\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        marginTop: 20,\r\n        backgroundColor: \"#ebf0f7\"\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}