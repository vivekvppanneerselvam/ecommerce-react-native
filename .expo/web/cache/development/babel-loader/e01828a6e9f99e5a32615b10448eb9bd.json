{"ast":null,"code":"import serverCall from \"../../modules/serverCall\";\nexport var fetchActiveOrders = function fetchActiveOrders(user_id) {\n  return function (dispatch) {\n    dispatch({\n      type: 'ACTIVE_ORDERS_LOADING',\n      loading: true,\n      error: false\n    });\n    return serverCall({\n      method: 'GET',\n      url: \"/active_order?id=\" + user_id\n    }).then(function (res) {\n      return dispatch({\n        type: 'ACTIVE_ORDERS',\n        loading: false,\n        data: res.data.order,\n        error: false\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'ACTIVE_ORDERS_ERROR',\n        loading: false,\n        data: err,\n        error: true\n      });\n    });\n  };\n};\nexport var trackSelectedOrder = function trackSelectedOrder(order_id) {\n  return function (dispatch) {\n    dispatch({\n      type: 'TRACK_ORDER_LOADING',\n      loading: true,\n      error: false\n    });\n    return serverCall({\n      method: 'GET',\n      url: \"/order?id=\" + order_id\n    }).then(function (res) {\n      dispatch({\n        type: 'TRACK_ORDER',\n        loading: false,\n        data: res.data.order,\n        error: false\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'TRACK_ORDER_ERROR',\n        loading: false,\n        data: err,\n        error: true\n      });\n    });\n  };\n};\nexport var getSelectedOrderAddress = function getSelectedOrderAddress(address_id) {\n  return function (dispatch) {\n    dispatch({\n      type: 'ADDRESS_BY_ID_LOADING',\n      loading: true,\n      error: false\n    });\n    return serverCall({\n      method: 'GET',\n      url: \"/address?id=\" + address_id\n    }).then(function (res) {\n      dispatch({\n        type: 'ADDRESS_BY_ID',\n        loading: false,\n        data: res.data.address,\n        error: false\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'ADDRESS_BY_ID_ERROR',\n        loading: false,\n        data: err,\n        error: true\n      });\n    });\n  };\n};\nexport var getCartById = function getCartById(cart_id) {\n  return function (dispatch) {\n    dispatch({\n      type: 'CART_BY_ID_LOADING',\n      loading: true,\n      error: false\n    });\n    return serverCall({\n      method: 'GET',\n      url: \"/cart?id=\" + cart_id\n    }).then(function (res) {\n      dispatch({\n        type: 'CART_BY_ID',\n        loading: false,\n        data: res.data.cart,\n        error: false\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'CART_BY_ID_ERROR',\n        loading: false,\n        data: err,\n        error: true\n      });\n    });\n  };\n};\nexport var updateOrder = function updateOrder(payload) {\n  return function (dispatch) {\n    dispatch({\n      type: 'UPDATE_ORDER_LOADING',\n      loading: true,\n      error: false\n    });\n    return serverCall({\n      method: 'POST',\n      url: \"/update_order\",\n      data: payload\n    }).then(function (res) {\n      dispatch({\n        type: 'UPDATE_ORDER',\n        loading: false,\n        data: res.data.cart,\n        error: false\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'UPDATE_ORDER_ERROR',\n        loading: false,\n        data: err,\n        error: true\n      });\n    });\n  };\n};","map":{"version":3,"sources":["D:/WS/reactws/ReactNativeEcommerce/src/redux/action/trackOrderAction.js"],"names":["serverCall","fetchActiveOrders","user_id","dispatch","type","loading","error","method","url","then","res","data","order","catch","err","trackSelectedOrder","order_id","getSelectedOrderAddress","address_id","address","getCartById","cart_id","cart","updateOrder","payload"],"mappings":"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","sourcesContent":["import serverCall from '../../modules/serverCall'\r\n\r\nexport const fetchActiveOrders = (user_id) => {\r\n    return dispatch => {\r\n        dispatch({ type: 'ACTIVE_ORDERS_LOADING', loading: true, error: false })\r\n        return serverCall({ method: 'GET', url: `/active_order?id=${user_id}` }).then(res => {\r\n            return dispatch({ type: 'ACTIVE_ORDERS', loading: false, data: res.data.order, error: false })\r\n        }).catch(err => {\r\n            dispatch({ type: 'ACTIVE_ORDERS_ERROR', loading: false, data: err, error: true })\r\n        })\r\n    }\r\n}\r\n\r\nexport const trackSelectedOrder = (order_id) => dispatch => {\r\n    dispatch({ type: 'TRACK_ORDER_LOADING', loading: true, error: false })\r\n    return serverCall({ method: 'GET', url: `/order?id=${order_id}` }).then(res => {\r\n        dispatch({ type: 'TRACK_ORDER', loading: false, data: res.data.order, error: false })        \r\n    }).catch(err => {\r\n        dispatch({ type: 'TRACK_ORDER_ERROR', loading: false, data: err, error: true })        \r\n    })\r\n}\r\n\r\nexport const getSelectedOrderAddress = (address_id) => dispatch => {\r\n    dispatch({ type: 'ADDRESS_BY_ID_LOADING', loading: true, error: false })\r\n    return serverCall({ method: 'GET', url: `/address?id=${address_id}` }).then(res => {\r\n        dispatch({ type: 'ADDRESS_BY_ID', loading: false, data: res.data.address, error: false })        \r\n    }).catch(err => {\r\n        dispatch({ type: 'ADDRESS_BY_ID_ERROR', loading: false, data: err, error: true })        \r\n    })\r\n}\r\n\r\nexport const getCartById = (cart_id) => dispatch => {\r\n    dispatch({ type: 'CART_BY_ID_LOADING', loading: true, error: false })\r\n    return serverCall({ method: 'GET', url: `/cart?id=${cart_id}` }).then(res => {\r\n        dispatch({ type: 'CART_BY_ID', loading: false, data: res.data.cart, error: false })        \r\n    }).catch(err => {\r\n        dispatch({ type: 'CART_BY_ID_ERROR', loading: false, data: err, error: true })        \r\n    })\r\n}\r\n\r\nexport const updateOrder =(payload)=> dispatch => {\r\n    dispatch({ type: 'UPDATE_ORDER_LOADING', loading: true, error: false })\r\n    return serverCall({ method: 'POST', url: `/update_order`, data:payload }).then(res => {\r\n        dispatch({ type: 'UPDATE_ORDER', loading: false, data: res.data.cart, error: false })        \r\n    }).catch(err => {\r\n        dispatch({ type: 'UPDATE_ORDER_ERROR', loading: false, data: err, error: true })        \r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}