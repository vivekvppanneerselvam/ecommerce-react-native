{"ast":null,"code":"import serverCall, { getPaypalToken } from \"../../modules/serverCall\";\nexport var getCheckoutUrl = function getCheckoutUrl(cartId) {\n  return function (dispatch) {\n    dispatch({\n      type: GET_CHECKOUT_BEGIN\n    });\n    return serverCall({\n      method: 'GET',\n      url: \"/checkout/\" + cartId\n    }).then(function (res) {\n      dispatch({\n        type: GET_CHECKOUT_SUCCESS,\n        payload: res\n      });\n      return res;\n    }).catch(function (error) {\n      dispatch({\n        type: GET_CHECKOUT_FAIL,\n        payload: {\n          error: error\n        }\n      });\n      return error;\n    });\n  };\n};\nexport var getPayment = function getPayment(paymentId, PayerID) {\n  return function (dispatch) {\n    dispatch({\n      type: GET_PAYMENT_BEGIN\n    });\n    return getPaypalToken().then(function (response) {\n      return serverCall({\n        method: 'GET',\n        url: \"/payment/success?paymentId=\" + paymentId + \"&PayerID=\" + PayerID,\n        headers: {\n          'Authorization': \"Bearer \" + response.data.access_token\n        }\n      }).then(function (res) {\n        dispatch({\n          type: GET_PAYMENT_SUCCESS,\n          payload: res\n        });\n        return res;\n      }).catch(function (error) {\n        dispatch({\n          type: GET_PAYMENT_FAIL,\n          payload: {\n            error: error\n          }\n        });\n        return error;\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: GET_PAYMENT_FAIL,\n        payload: {\n          error: error\n        }\n      });\n      return error;\n    });\n  };\n};\nexport var GET_PAYMENT_BEGIN = 'GET_PAYMENT_BEGIN';\nexport var GET_PAYMENT_SUCCESS = 'GET_PAYMENT_SUCCESS';\nexport var GET_PAYMENT_FAIL = 'GET_PAYMENT_FAIL';\nexport var GET_CHECKOUT_BEGIN = 'GET_CHECKOUT_BEGIN';\nexport var GET_CHECKOUT_SUCCESS = 'GET_CHECKOUT_SUCCESS';\nexport var GET_CHECKOUT_FAIL = 'GET_CHECKOUT_FAIL';","map":{"version":3,"sources":["D:/WS/reactws/ReactNativeEcommerce/src/redux/action/checkoutAction.js"],"names":["serverCall","getPaypalToken","getCheckoutUrl","cartId","dispatch","type","GET_CHECKOUT_BEGIN","method","url","then","res","GET_CHECKOUT_SUCCESS","payload","catch","error","GET_CHECKOUT_FAIL","getPayment","paymentId","PayerID","GET_PAYMENT_BEGIN","response","headers","data","access_token","GET_PAYMENT_SUCCESS","GET_PAYMENT_FAIL"],"mappings":"AAAA,OAAOA,UAAP,IAAqBC,cAArB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD;AAAA,SAAY,UAAAC,QAAQ,EAAI;AACpDA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEC;AADC,KAAD,CAAR;AAGA,WAAON,UAAU,CAAC;AAChBO,MAAAA,MAAM,EAAE,KADQ;AAEhBC,MAAAA,GAAG,iBAAeL;AAFF,KAAD,CAAV,CAIJM,IAJI,CAIC,UAAAC,GAAG,EAAI;AACXN,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEM,oBADC;AAEPC,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAIA,aAAOA,GAAP;AACD,KAVI,EAWJG,KAXI,CAWE,UAAAC,KAAK,EAAI;AACdV,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEU,iBADC;AAEPH,QAAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAALA;AAAF;AAFF,OAAD,CAAR;AAIA,aAAOA,KAAP;AACD,KAjBI,CAAP;AAkBD,GAtB6B;AAAA,CAAvB;AAwBP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,SAAD,EAAYC,OAAZ;AAAA,SAAwB,UAAAd,QAAQ,EAAI;AAC5DA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEc;AADC,KAAD,CAAR;AAGA,WAAOlB,cAAc,GAClBQ,IADI,CACC,UAAAW,QAAQ,EAAI;AAChB,aAAOpB,UAAU,CAAC;AAChBO,QAAAA,MAAM,EAAE,KADQ;AAEhBC,QAAAA,GAAG,kCAAgCS,SAAhC,iBAAqDC,OAFxC;AAGhBG,QAAAA,OAAO,EAAE;AAAE,uCAA2BD,QAAQ,CAACE,IAAT,CAAcC;AAA3C;AAHO,OAAD,CAAV,CAKJd,IALI,CAKC,UAAAC,GAAG,EAAI;AACXN,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEmB,mBADC;AAEPZ,UAAAA,OAAO,EAAEF;AAFF,SAAD,CAAR;AAIA,eAAOA,GAAP;AACD,OAXI,EAYJG,KAZI,CAYE,UAAAC,KAAK,EAAI;AACdV,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEoB,gBADC;AAEPb,UAAAA,OAAO,EAAE;AAAEE,YAAAA,KAAK,EAALA;AAAF;AAFF,SAAD,CAAR;AAIA,eAAOA,KAAP;AACD,OAlBI,CAAP;AAmBD,KArBI,EAsBJD,KAtBI,CAsBE,UAAAC,KAAK,EAAI;AACdV,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEoB,gBADC;AAEPb,QAAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAALA;AAAF;AAFF,OAAD,CAAR;AAIA,aAAOA,KAAP;AACD,KA5BI,CAAP;AA6BD,GAjCyB;AAAA,CAAnB;AAoCP,OAAO,IAAMK,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMK,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,IAAMnB,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMK,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMI,iBAAiB,GAAG,mBAA1B","sourcesContent":["import serverCall, { getPaypalToken } from '../../modules/serverCall'\r\n\r\nexport const getCheckoutUrl = (cartId) => dispatch => {\r\n  dispatch({\r\n    type: GET_CHECKOUT_BEGIN,\r\n  })\r\n  return serverCall({\r\n    method: 'GET',\r\n    url: `/checkout/${cartId}`\r\n  })\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_CHECKOUT_SUCCESS,\r\n        payload: res\r\n      })\r\n      return res\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: GET_CHECKOUT_FAIL,\r\n        payload: { error }\r\n      })\r\n      return error\r\n    })\r\n}\r\n\r\nexport const getPayment = (paymentId, PayerID) => dispatch => {\r\n  dispatch({\r\n    type: GET_PAYMENT_BEGIN,\r\n  })\r\n  return getPaypalToken()\r\n    .then(response => {\r\n      return serverCall({\r\n        method: 'GET',\r\n        url: `/payment/success?paymentId=${paymentId}&PayerID=${PayerID}`,\r\n        headers: { 'Authorization': `Bearer ${response.data.access_token}` }\r\n      })\r\n        .then(res => {\r\n          dispatch({\r\n            type: GET_PAYMENT_SUCCESS,\r\n            payload: res\r\n          })\r\n          return res\r\n        })\r\n        .catch(error => {\r\n          dispatch({\r\n            type: GET_PAYMENT_FAIL,\r\n            payload: { error }\r\n          })\r\n          return error\r\n        })\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: GET_PAYMENT_FAIL,\r\n        payload: { error }\r\n      })\r\n      return error\r\n    })\r\n}\r\n\r\n\r\nexport const GET_PAYMENT_BEGIN = 'GET_PAYMENT_BEGIN'\r\nexport const GET_PAYMENT_SUCCESS = 'GET_PAYMENT_SUCCESS'\r\nexport const GET_PAYMENT_FAIL = 'GET_PAYMENT_FAIL'\r\n\r\nexport const GET_CHECKOUT_BEGIN = 'GET_CHECKOUT_BEGIN'\r\nexport const GET_CHECKOUT_SUCCESS = 'GET_CHECKOUT_SUCCESS'\r\nexport const GET_CHECKOUT_FAIL = 'GET_CHECKOUT_FAIL'"]},"metadata":{},"sourceType":"module"}