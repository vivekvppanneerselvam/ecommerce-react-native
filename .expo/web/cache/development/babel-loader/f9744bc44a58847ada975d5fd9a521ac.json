{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WS\\\\reactws\\\\ReactNativeEcommerce\\\\src\\\\views\\\\SignIn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AuthContext } from \"../helpers/index\";\n\nfunction Login(props) {\n  var _this = this;\n\n  var _useState = useState({\n    email: '',\n    password: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      signIn = _React$useContext.signIn;\n\n  useEffect(function () {\n    if (!props.login_loading) {\n      if (!props.login_data.toJS().error) {\n        signIn(props.login_data.toJS().data['user']);\n      } else {\n        Alert.alert('Error', JSON.stringify(props.login_data.toJS().data), [{\n          text: 'Okay'\n        }]);\n      }\n    }\n  }, [props.login_loading]);\n\n  var onClickListener = function onClickListener(viewId) {\n    if (viewId === 'login') {} else if (viewId === 'register') {\n      _this.props.navigation.navigate(\"Register\");\n    } else {}\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.bgImage,\n    source: {\n      uri: \"https://lorempixel.com/900/1400/nightlife/2/\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(email) {\n      return setState(function (prevState) {\n        prevState.email = email;\n\n        _objectSpread({}, prevState);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: 'https://img.icons8.com/nolan/40/000000/email.png'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(password) {\n      return setState(function (prevState) {\n        prevState.password = password;\n\n        _objectSpread({}, prevState);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: 'https://img.icons8.com/nolan/40/000000/key.png'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.btnForgotPassword,\n    onPress: function onPress() {\n      return onClickListener('restore_password');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.btnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Forgot your password?\")), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.loginButton],\n    onPress: function onPress() {\n      return onClickListener('login');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    style: styles.buttonContainer,\n    onPress: function onPress() {\n      return onClickListener('register');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.btnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Register\")));\n}\n\nexport default Connect()(SignIn);\nvar resizeMode = 'center';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#DCDCDC'\n  },\n  inputContainer: {\n    borderBottomColor: '#F5FCFF',\n    backgroundColor: '#FFFFFF',\n    borderRadius: 30,\n    borderBottomWidth: 1,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: '#FFFFFF',\n    flex: 1\n  },\n  inputIcon: {\n    width: 30,\n    height: 30,\n    marginRight: 15,\n    justifyContent: 'center'\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: 'transparent'\n  },\n  btnForgotPassword: {\n    height: 15,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n    marginBottom: 10,\n    width: 300,\n    backgroundColor: 'transparent'\n  },\n  loginButton: {\n    backgroundColor: \"#00b5ec\",\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9\n    },\n    shadowOpacity: 0.50,\n    shadowRadius: 12.35,\n    elevation: 19\n  },\n  loginText: {\n    color: 'white'\n  },\n  bgImage: {\n    flex: 1,\n    resizeMode: resizeMode,\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center'\n  },\n  btnText: {\n    color: \"white\",\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["D:/WS/reactws/ReactNativeEcommerce/src/views/SignIn.js"],"names":["React","useState","AuthContext","Login","props","email","password","state","setState","useContext","signIn","useEffect","login_loading","login_data","toJS","error","data","Alert","alert","JSON","stringify","text","onClickListener","viewId","navigation","navigate","styles","container","bgImage","uri","inputContainer","inputs","prevState","inputIcon","btnForgotPassword","btnText","buttonContainer","loginButton","loginText","Connect","SignIn","resizeMode","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","borderBottomColor","borderRadius","borderBottomWidth","width","height","marginBottom","flexDirection","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginLeft","marginRight","color","position","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    StyleSheet, Text, View, TextInput,\r\n    Button, TouchableOpacity, Image, Alert\r\n} from 'react-native';\r\nimport { AuthContext } from '../helpers/index'\r\n\r\nfunction Login(props) {\r\n    const [state, setState] = useState({\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const { signIn } = React.useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        if (!props.login_loading) {\r\n            if (!props.login_data.toJS().error) {\r\n                signIn(props.login_data.toJS().data['user']);\r\n            } else {\r\n                Alert.alert('Error', JSON.stringify(props.login_data.toJS().data), [\r\n                    { text: 'Okay' }\r\n                ]);\r\n            }\r\n        }\r\n    }, [props.login_loading])\r\n\r\n\r\n    const onClickListener = (viewId) => {\r\n        if (viewId === 'login') {\r\n\r\n        } else if (viewId === 'register') {\r\n            this.props.navigation.navigate(\"Register\");\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Image style={styles.bgImage} source={{ uri: \"https://lorempixel.com/900/1400/nightlife/2/\" }} />\r\n            <View style={styles.inputContainer}>\r\n                <TextInput style={styles.inputs}\r\n                    placeholder=\"Email\"\r\n                    keyboardType=\"email-address\"\r\n                    underlineColorAndroid='transparent'\r\n                    onChangeText={(email) => setState((prevState) => { prevState.email = email; ({ ...prevState }) })} />\r\n                <Image style={styles.inputIcon} source={{ uri: 'https://img.icons8.com/nolan/40/000000/email.png' }} />\r\n            </View>\r\n            <View style={styles.inputContainer}>\r\n                <TextInput style={styles.inputs}\r\n                    placeholder=\"Password\"\r\n                    secureTextEntry={true}\r\n                    underlineColorAndroid='transparent'\r\n                    onChangeText={(password) => setState((prevState) => { prevState.password = password; ({ ...prevState }) })} />\r\n                <Image style={styles.inputIcon} source={{ uri: 'https://img.icons8.com/nolan/40/000000/key.png' }} />\r\n            </View>\r\n            <TouchableOpacity style={styles.btnForgotPassword} onPress={() => onClickListener('restore_password')}>\r\n                <Text style={styles.btnText}>Forgot your password?</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={[styles.buttonContainer, styles.loginButton]} onPress={() => onClickListener('login')}>\r\n                <Text style={styles.loginText}>Login</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={styles.buttonContainer} onPress={() => onClickListener('register')}>\r\n                <Text style={styles.btnText}>Register</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n\r\n}\r\nexport default Connect()(SignIn)\r\n\r\nconst resizeMode = 'center';\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#DCDCDC',\r\n    },\r\n    inputContainer: {\r\n        borderBottomColor: '#F5FCFF',\r\n        backgroundColor: '#FFFFFF',\r\n        borderRadius: 30,\r\n        borderBottomWidth: 1,\r\n        width: 300,\r\n        height: 45,\r\n        marginBottom: 20,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n\r\n        shadowColor: \"#808080\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n\r\n        elevation: 5,\r\n    },\r\n    inputs: {\r\n        height: 45,\r\n        marginLeft: 16,\r\n        borderBottomColor: '#FFFFFF',\r\n        flex: 1,\r\n    },\r\n    inputIcon: {\r\n        width: 30,\r\n        height: 30,\r\n        marginRight: 15,\r\n        justifyContent: 'center'\r\n    },\r\n    buttonContainer: {\r\n        height: 45,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 20,\r\n        width: 300,\r\n        borderRadius: 30,\r\n        backgroundColor: 'transparent'\r\n    },\r\n    btnForgotPassword: {\r\n        height: 15,\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'flex-end',\r\n        marginBottom: 10,\r\n        width: 300,\r\n        backgroundColor: 'transparent'\r\n    },\r\n    loginButton: {\r\n        backgroundColor: \"#00b5ec\",\r\n\r\n        shadowColor: \"#808080\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 9,\r\n        },\r\n        shadowOpacity: 0.50,\r\n        shadowRadius: 12.35,\r\n\r\n        elevation: 19,\r\n    },\r\n    loginText: {\r\n        color: 'white',\r\n    },\r\n    bgImage: {\r\n        flex: 1,\r\n        resizeMode,\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n    },\r\n    btnText: {\r\n        color: \"white\",\r\n        fontWeight: 'bold'\r\n    }\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}