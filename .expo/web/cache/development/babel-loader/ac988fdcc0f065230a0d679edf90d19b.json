{"ast":null,"code":"import { login } from \"../../modules/serverCall\";\nexport var postToken = function postToken(email, password) {\n  return function (dispatch) {\n    dispatch({\n      type: POST_TOKEN_BEGIN\n    });\n    return login(email, password).then(function (res) {\n      dispatch({\n        type: POST_TOKEN_SUCCESS,\n        payload: res\n      });\n      console.log('tokenAction res');\n      console.log(res);\n      return res;\n    }).catch(function (error) {\n      dispatch({\n        type: POST_TOKEN_FAIL,\n        payload: {\n          error: error\n        }\n      });\n      throw error;\n    });\n  };\n};\nexport var insertToken = function insertToken() {\n  return function (dispatch) {\n    var token;\n\n    if (localStorage.getItem('auth')) {\n      token = JSON.parse(localStorage.getItem('auth'));\n      dispatch({\n        type: INSERT_TOKEN_SUCCESS,\n        payload: token\n      });\n    } else {\n      dispatch({\n        type: INSERT_TOKEN_FAIL\n      });\n    }\n  };\n};\nexport var POST_TOKEN_BEGIN = 'POST_TOKEN_BEGIN';\nexport var POST_TOKEN_SUCCESS = 'POST_TOKEN_SUCCESS';\nexport var POST_TOKEN_FAIL = 'POST_TOKEN_FAIL';\nexport var INSERT_TOKEN_SUCCESS = 'INSERT_TOKEN_SUCCESS';\nexport var INSERT_TOKEN_FAIL = 'INSERT_TOKEN_FAIL';","map":{"version":3,"sources":["D:/WS/reactws/ReactNativeEcommerce/src/redux/action/tokenAction.js"],"names":["login","postToken","email","password","dispatch","type","POST_TOKEN_BEGIN","then","res","POST_TOKEN_SUCCESS","payload","console","log","catch","error","POST_TOKEN_FAIL","insertToken","token","localStorage","getItem","JSON","parse","INSERT_TOKEN_SUCCESS","INSERT_TOKEN_FAIL"],"mappings":"AAAA,SAASA,KAAT;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,QAAR;AAAA,SAAqB,UAAAC,QAAQ,EAAI;AACxDA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEC;AAAR,KAAD,CAAR;AACA,WAAON,KAAK,CAACE,KAAD,EAAQC,QAAR,CAAL,CAAuBI,IAAvB,CAA4B,UAAAC,GAAG,EAAI;AACxCJ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEI,kBAAR;AAA4BC,QAAAA,OAAO,EAAEF;AAArC,OAAD,CAAR;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,aAAOA,GAAP;AACD,KALM,EAKJK,KALI,CAKE,UAAAC,KAAK,EAAI;AAChBV,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEU,eAAR;AAAyBL,QAAAA,OAAO,EAAE;AAAEI,UAAAA,KAAK,EAALA;AAAF;AAAlC,OAAD,CAAR;AACA,YAAMA,KAAN;AACD,KARM,CAAP;AASD,GAXwB;AAAA,CAAlB;AAaP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAAAZ,QAAQ,EAAI;AAC3C,QAAIa,KAAJ;;AACA,QAAIC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAJ,EAAkC;AAChCF,MAAAA,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAR;AACAf,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEiB,oBAAR;AAA8BZ,QAAAA,OAAO,EAAEO;AAAvC,OAAD,CAAR;AACD,KAHD,MAGO;AACLb,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEkB;AAAR,OAAD,CAAR;AACD;AACF,GAR0B;AAAA,CAApB;AAUP,OAAO,IAAMjB,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMG,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMM,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMO,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B","sourcesContent":["import { login } from '../../modules/serverCall'\r\n\r\nexport const postToken = (email, password) => dispatch => {\r\n  dispatch({ type: POST_TOKEN_BEGIN })\r\n  return login(email, password).then(res => {\r\n    dispatch({ type: POST_TOKEN_SUCCESS, payload: res })\r\n    console.log('tokenAction res');\r\n    console.log(res);\r\n    return res\r\n  }).catch(error => {\r\n    dispatch({ type: POST_TOKEN_FAIL, payload: { error } })\r\n    throw error\r\n  })\r\n}\r\n\r\nexport const insertToken = () => dispatch => {\r\n  let token\r\n  if (localStorage.getItem('auth')) {\r\n    token = JSON.parse(localStorage.getItem('auth'))\r\n    dispatch({ type: INSERT_TOKEN_SUCCESS, payload: token })\r\n  } else {\r\n    dispatch({ type: INSERT_TOKEN_FAIL })\r\n  }\r\n}\r\n\r\nexport const POST_TOKEN_BEGIN = 'POST_TOKEN_BEGIN'\r\nexport const POST_TOKEN_SUCCESS = 'POST_TOKEN_SUCCESS'\r\nexport const POST_TOKEN_FAIL = 'POST_TOKEN_FAIL'\r\nexport const INSERT_TOKEN_SUCCESS = 'INSERT_TOKEN_SUCCESS'\r\nexport const INSERT_TOKEN_FAIL = 'INSERT_TOKEN_FAIL'\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}