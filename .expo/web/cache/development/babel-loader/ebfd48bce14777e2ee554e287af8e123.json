{"ast":null,"code":"import serverCall from \"../../modules/serverCall\";\nexport var signin = function signin(fullname, email, password, verifyPassword) {\n  return function (dispatch) {\n    dispatch({\n      type: POST_SIGNIN_BEGIN\n    });\n    return serverCall({\n      method: 'POST',\n      url: '/signin',\n      data: {\n        fullname: fullname,\n        email: email,\n        password: password,\n        verifyPassword: verifyPassword\n      }\n    }).then(function (res) {\n      dispatch({\n        type: POST_SIGNIN_SUCCESS,\n        payload: res\n      });\n      return res;\n    }).catch(function (error) {\n      dispatch({\n        type: POST_SIGNIN_FAIL,\n        payload: {\n          error: error\n        }\n      });\n      throw error;\n    });\n  };\n};\nexport var forgotpassword = function forgotpassword(payload) {\n  return function (dispatch) {\n    dispatch({\n      type: 'FORGOT_PWD_LOADING'\n    });\n    return serverCall({\n      method: 'POST',\n      url: '/forgotpasswordResponse',\n      data: payload\n    }).then(function (res) {\n      dispatch({\n        type: 'FORGOT_PWD',\n        payload: res\n      });\n      return res;\n    }).catch(function (error) {\n      dispatch({\n        type: 'FORGOT_PWD_ERROR',\n        payload: {\n          error: error\n        }\n      });\n      throw error;\n    });\n  };\n};\nexport var POST_SIGNIN_BEGIN = 'POST_SIGNIN_BEGIN';\nexport var POST_SIGNIN_SUCCESS = 'POST_SIGNIN_SUCCESS';\nexport var POST_SIGNIN_FAIL = 'POST_SIGNIN_FAIL';","map":{"version":3,"sources":["D:/WS/reactws/ReactNativeEcommerce/src/redux/action/signinAction.js"],"names":["serverCall","signin","fullname","email","password","verifyPassword","dispatch","type","POST_SIGNIN_BEGIN","method","url","data","then","res","POST_SIGNIN_SUCCESS","payload","catch","error","POST_SIGNIN_FAIL","forgotpassword"],"mappings":"AAAA,OAAOA,UAAP;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,EAA4BC,cAA5B;AAAA,SAA+C,UAAAC,QAAQ,EAAI;AAC/EA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEC;AAAR,KAAD,CAAR;AACA,WAAOR,UAAU,CAAC;AAChBS,MAAAA,MAAM,EAAE,MADQ;AACAC,MAAAA,GAAG,EAAE,SADL;AAEhBC,MAAAA,IAAI,EAAE;AACJT,QAAAA,QAAQ,EAARA,QADI;AACMC,QAAAA,KAAK,EAALA,KADN;AACaC,QAAAA,QAAQ,EAARA,QADb;AACuBC,QAAAA,cAAc,EAAdA;AADvB;AAFU,KAAD,CAAV,CAKJO,IALI,CAKC,UAAAC,GAAG,EAAI;AACbP,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEO,mBAAR;AAA6BC,QAAAA,OAAO,EAAEF;AAAtC,OAAD,CAAR;AACA,aAAOA,GAAP;AACD,KARM,EAQJG,KARI,CAQE,UAAAC,KAAK,EAAI;AAChBX,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEW,gBAAR;AAA0BH,QAAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAALA;AAAF;AAAnC,OAAD,CAAR;AACA,YAAMA,KAAN;AACD,KAXM,CAAP;AAYD,GAdqB;AAAA,CAAf;AAgBP,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACJ,OAAD;AAAA,SAAa,UAAAT,QAAQ,EAAI;AACrDA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,WAAOP,UAAU,CAAC;AAChBS,MAAAA,MAAM,EAAE,MADQ;AACAC,MAAAA,GAAG,EAAE,yBADL;AAEhBC,MAAAA,IAAI,EAAEI;AAFU,KAAD,CAAV,CAGJH,IAHI,CAGC,UAAAC,GAAG,EAAI;AACbP,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,YAAR;AAAsBQ,QAAAA,OAAO,EAAEF;AAA/B,OAAD,CAAR;AACA,aAAOA,GAAP;AACD,KANM,EAMJG,KANI,CAME,UAAAC,KAAK,EAAI;AAChBX,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,kBAAR;AAA4BQ,QAAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAALA;AAAF;AAArC,OAAD,CAAR;AACA,YAAMA,KAAN;AACD,KATM,CAAP;AAUD,GAZ6B;AAAA,CAAvB;AAcP,OAAO,IAAMT,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMM,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMI,gBAAgB,GAAG,kBAAzB","sourcesContent":["import serverCall from '../../modules/serverCall'\r\n\r\nexport const signin = (fullname, email, password, verifyPassword) => dispatch => {\r\n  dispatch({ type: POST_SIGNIN_BEGIN, })\r\n  return serverCall({\r\n    method: 'POST', url: '/signin',\r\n    data: {\r\n      fullname, email, password, verifyPassword\r\n    }\r\n  }).then(res => {\r\n    dispatch({ type: POST_SIGNIN_SUCCESS, payload: res })\r\n    return res\r\n  }).catch(error => {\r\n    dispatch({ type: POST_SIGNIN_FAIL, payload: { error } })\r\n    throw error\r\n  })\r\n}\r\n\r\nexport const forgotpassword = (payload) => dispatch => {\r\n  dispatch({ type: 'FORGOT_PWD_LOADING' })\r\n  return serverCall({\r\n    method: 'POST', url: '/forgotpasswordResponse',\r\n    data: payload\r\n  }).then(res => {\r\n    dispatch({ type: 'FORGOT_PWD', payload: res })\r\n    return res\r\n  }).catch(error => {\r\n    dispatch({ type: 'FORGOT_PWD_ERROR', payload: { error } })\r\n    throw error\r\n  })\r\n}\r\n\r\nexport const POST_SIGNIN_BEGIN = 'POST_SIGNIN_BEGIN'\r\nexport const POST_SIGNIN_SUCCESS = 'POST_SIGNIN_SUCCESS'\r\nexport const POST_SIGNIN_FAIL = 'POST_SIGNIN_FAIL'\r\n"]},"metadata":{},"sourceType":"module"}